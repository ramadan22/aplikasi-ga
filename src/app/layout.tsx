import type { Metadata } from 'next';
import { Outfit } from 'next/font/google';
import type { ReactNode } from 'react';

import '@/assets/css/globals.scss';

import NextAuthProvider from '@/lib/providers/NextAuthProvider';
import IntlClientProvider from '@/lib/providers/NextIntlProvider';
import SidebarProvider from '@/lib/zustand/SidebarStore';

import GetRequestConfigHandler from '@/lib/next-intl/Request';
import ReactQueryClientProvider from '@/lib/providers/ReactQueryProvider';
import { ToastifyProvider } from '@/lib/providers/ReactToastify';
import ViewportMeta from '../utils/ViewportMeta';

export async function generateMetadata({
  params,
}: {
  params: Promise<{ locale: string }>;
}): Promise<Metadata> {
  const resolvedParams = await params;
  const locale = resolvedParams.locale;

  const { messages } = await GetRequestConfigHandler({ requestLocale: Promise.resolve(locale) });

  return {
    title: messages?.title || 'Create Next App',
    description: messages?.description || 'Generated by create next app',
  };
}

const outfit = Outfit({
  subsets: ['latin'],
});

const RootLayout = async ({
  children,
  params,
}: {
  children: ReactNode;
  params: Promise<{ locale: string }>;
}) => {
  const resolvedParams = await params;
  const locale = resolvedParams.locale;

  const { messages } = await GetRequestConfigHandler({ requestLocale: Promise.resolve(locale) });

  return (
    <html lang={locale}>
      <body
        className={`${outfit.className} dark:bg-gray-900`}
        style={{ overscrollBehavior: 'none' }}
      >
        <ViewportMeta />
        <NextAuthProvider>
          <ReactQueryClientProvider>
            <SidebarProvider>
              <IntlClientProvider locale={locale} messages={messages}>
                <ToastifyProvider>{children}</ToastifyProvider>
              </IntlClientProvider>
            </SidebarProvider>
          </ReactQueryClientProvider>
        </NextAuthProvider>
      </body>
    </html>
  );
};

export default RootLayout;
